{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","backgroundColor","mode","color","border","borderColor","className","style","id","type","Navbar","to","title","aboutText","onChange","toggleMode","htmlFor","defaultProps","TextForm","useState","text","setText","emails","setEmails","heading","value","placeholder","event","target","rows","disabled","length","onClick","newText","toUpperCase","showAlert","toLowerCase","newEmail","split","filter","e","includes","console","log","navigator","clipboard","writeText","join","element","Alert","height","alert","role","typeText","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.54207a1f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    const myStyle = {\r\n        backgroundColor: props.mode===\"light\" ? \"white\" : \"#343a40\",\r\n        color : props.mode === \"light\" ? \"black\" : \"white\",\r\n        border : \"1% solid\",\r\n        borderColor : props.mode === \"light\" ? \"#343a40\" : \"white\"\r\n\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className=\"container mt-3 pb-3\" style={{backgroundColor: props.mode===\"light\" ? \"white\" : \"#343a40\",\r\n        color : props.mode === \"light\" ? \"black\" : \"white\"\r\n        }}>\r\n            <h2 className=\"my-2\">About Us</h2>\r\n            <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            <strong>Analyze your text</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" >\r\n                            <strong>TextUtils is a utility which can be used to analyze your text efficiently. </strong> \r\n                            You can manipulate your text in the way you want. You can convert the lowercase text to uppercase text, uppercase text to lowercase text, you can remove extra spaces from your text, extra email ids from the text if any, copy you text.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                        <strong>Free to use</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            TextUtils is free to use. You can perform all the operations on your text.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                        <strong>Browser Compatible</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\">\r\n                            This application works in any browser like Google Chrome, Mozilla Firefox, Microsoft Edge, Internet Explorer, etc. \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav mr-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                            </li>\r\n                        </ul>\r\n                        <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                            <input className=\"form-check-input\" type=\"checkbox\" onChange = {props.toggleMode} id=\"flexSwitchCheckDefault\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" >{`${props.mode === \"light\" ? 'Enable' : 'Disable'} Dark Mode`}</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: \"Title here\",\r\n    aboutText: \"About Text here\"\r\n}","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () =>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text converted to Uppercase !!!\", \"success\" )\r\n    }\r\n    \r\n    const handleLoClick = () =>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text converted to Lowercase !!!\", \"success\" )\r\n    }\r\n\r\n    const handleClearClick = () => {\r\n        setText('');\r\n        setEmails([]);\r\n        props.showAlert(\"Text cleared from text box\", \"success\" )\r\n    }\r\n\r\n    const handleEmailExtract = () => {\r\n        setEmails([]);\r\n        let newEmail = text.split(\" \").filter(e => (e.includes('@') && e.includes('.')));\r\n        console.log(newEmail);\r\n        setEmails(emails => [...emails, newEmail]);\r\n        if(newEmail.length === 0){\r\n            props.showAlert(\"No emails found\", \"danger\" )\r\n        }else{\r\n            props.showAlert(\"Find the extracted emails below\", \"success\" )\r\n        }\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        // let copiedText = document.getElementById('myBox');\r\n        // copiedText.select();\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Text copied to clipboard\", \"success\" )\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed\", \"success\" )\r\n    }\r\n\r\n    const handleOnChange = (event) =>{\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState('');\r\n    const [emails, setEmails] = useState([]);\r\n\r\n    return (\r\n        <>\r\n        <div className='container my-4'>\r\n            <h2>{props.heading}</h2>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} placeholder=\"Enter you text here\" onChange={handleOnChange} id=\"myBox\" rows=\"8\" style={{backgroundColor : props.mode===\"light\" ? \"#fff\" : \"#212529\" , color : props.mode===\"light\" ? \"#212529\" : \"#fff\"}}></textarea>\r\n            </div>\r\n            <button disabled ={text.length === 0} className={`btn btn-${props.mode === \"light\" ? \"secondary\" : \"dark\"} mr-1 mb-1`} onClick= {handleUpClick}>Convert to uppercase</button>\r\n            <button disabled ={text.length === 0} className={`btn btn-${props.mode === \"light\" ? \"secondary\" : \"dark\"} mr-1 mb-1`} onClick= {handleLoClick}>Convert to lowercase</button>\r\n            <button disabled ={text.length === 0} className={`btn btn-${props.mode === \"light\" ? \"secondary\" : \"dark\"} mr-1 mb-1`} onClick= {handleClearClick}>Clear text</button>\r\n            <button disabled ={text.length === 0} className={`btn btn-${props.mode === \"light\" ? \"secondary\" : \"dark\"} mr-1 mb-1`} onClick= {handleEmailExtract}>Extract email from text</button>\r\n            <button disabled ={text.length === 0} className={`btn btn-${props.mode === \"light\" ? \"secondary\" : \"dark\"} mr-1 mb-1`} onClick= {handleCopy}>Copy Text</button>\r\n            <button disabled ={text.length === 0} className={`btn btn-${props.mode === \"light\" ? \"secondary\" : \"dark\"} mr-1 mb-1`} onClick= {handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-4\">\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").filter((element) => (element.length !== 0)).length} words and {text.length === 0 ? 0 : text.length + 1 - text.split(\" \").filter((element) => (element.length !== 0)).length} characters</p>\r\n            <p>{0.008 * (text.split(\" \").filter((element) => (element.length !== 0)).length)} Minutes to read</p>\r\n            <h4>Preview</h4>\r\n            <p>{text.length > 0 ? text : \"Enter some text in the text box to preview it here\"}</p>\r\n            <h4>Emails Present in the text</h4>\r\n            <p>{emails.length > 0 ? emails.join(',') : 'No emails found'}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nTextForm.propTypes = {\r\n    heading : PropTypes.string.isRequired\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize = (text) => {\r\n        let typeText = text.toLowerCase();\r\n        return (typeText.charAt(0).toUpperCase() + typeText.slice(1));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container my-2\" style ={{height:\"50px\"}}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\" >\r\n                <strong>{capitalize(props.alert.type)} : </strong> {props.alert.msg}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nfunction App() {\n\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 3000);\n  }\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = '#343a40';\n      document.body.style.color = 'white';\n      showAlert(\"Dark Mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n      showAlert(\"Light Mode has been enabled\", \"success\");\n    }\n  }\n\n  return (\n    <>\n    <Router>\n      <Navbar title=\"TextUtils\" aboutText=\"About us\" mode={mode} toggleMode={toggleMode} />\n\n      <div className=\"container\">\n        <Alert alert={alert} />\n        <Switch>\n          <Route path=\"/about\">\n            <About mode={mode}/>\n          </Route>\n          <Route path=\"/\">\n            <TextForm heading=\"Try TextUtils - Word counter, Character counter, Remove extra spaces, etc.\" mode={mode} showAlert={showAlert} />\n          </Route>\n        </Switch>\n\n        {/* <About/> */}\n      </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}